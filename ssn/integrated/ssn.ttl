@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix voaf: <http://purl.org/vocommons/voaf#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix dqv: <http://www.w3.org/ns/dqv#> .

@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .


dcterms:title a owl:AnnotationProperty .
dcterms:description a owl:AnnotationProperty .
dcterms:rights a owl:AnnotationProperty .
dcterms:license a owl:AnnotationProperty .
dcterms:created a owl:AnnotationProperty .
dcterms:creator a owl:AnnotationProperty .
foaf:Agent a owl:Class .
foaf:name a owl:AnnotationProperty .
skos:definition a owl:AnnotationProperty .
skos:example a owl:AnnotationProperty .
vann:preferredNamespacePrefix a owl:AnnotationProperty .
vann:preferredNamespaceUri a owl:AnnotationProperty .
voaf:Vocabulary a owl:Class .


ssn: a owl:Ontology , voaf:Vocabulary ;
  dcterms:title "SSN graph of the SSN Ontology"@en ;
  dcterms:description "This graph adds axioms to the terms introduced in the SOSA graph, describing sensors, actuators and observations, and related concepts."@en ;
  dcterms:creator [ a foaf:Agent ; foaf:name "W3C/OGC Spatial Data on the Web Working Group"@en ] ;
  dcterms:rights "Copyright 2017 W3C/OGC." ;
  dcterms:license <http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document> ;
  dcterms:license <http://www.opengeospatial.org/ogc/Software> ;
  owl:versionInfo """New modular version of the SSN ontology. 

This ontology was originally developed in 2009-2011 by the W3C Semantic Sensor Networks Incubator Group (SSN-XG). For more information on the group's activities see: http://www.w3.org/2005/Incubator/ssn/. The ontology was revised and modularized in 2015-2017 by the W3C/OGC Spatial Data on the Web Working Group, see: https://www.w3.org/2015/spatial/wiki/Semantic_Sensor_Network_Ontology. 

In particular, (a) the scope is extended to include actuation and sampling; (b) the core concepts and properties are factored out into the SOSA ontology. The SSN ontology imports SOSA and adds formal axiomatization consistent with the text definitions in SOSA, and adds classes and properties to accommodate the scope of the original SSN ontology. """@en ;
  rdfs:comment "Please report any errors to the W3C Spatial Data on the Web Working Group via the SDW WG Public List public-sdw-wg@w3.org"@en ;
  skos:scopeNote "The SSN graph contains an axiomatization of the core terms from the SOSA graph (serialized in the sosa:ttl file) plus some deprecated terms in the ssn: namespace. " ;
  skos:historyNote """
  Terms in the ssn: namespace have equivalence axioms to terms declared in the sosa: namespace, and are marked 'deprecated'. 
  The axiomatization from the 2017 version of the standard is preserved. 

  Terms in the sosa: namespace do not carry symmetric equivalent axioms. 
  Axiomatization only uses sosa: terms. 
  """ ;
  rdfs:seeAlso <https://www.w3.org/2015/spatial/wiki/Semantic_Sensor_Network_Ontology> ;
  dcterms:created "2017-04-17"^^xsd:date ;
  vann:preferredNamespacePrefix "ssn" ;
  vann:preferredNamespaceUri "http://www.w3.org/ns/ssn/" ;
  owl:imports sosa: .


## Utility terms 

sosa:hasMember 
  rdfs:subPropertyOf rdfs:member ;
  rdfs:isDefinedBy sosa: .


## Features of interest and Property

sosa:FeatureOfInterest
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasProperty ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ; 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasProperty ; owl:allValuesFrom sosa:Property ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasSample ; owl:allValuesFrom sosa:Sample ]  ;
  rdfs:isDefinedBy sosa: .

sosa:Property a owl:Class ;
  rdfs:label "Property"@en ;
  skos:definition "An identifiable quality of a FeatureOfInterest that can be observed or acted upon. A property can apply to different features of interest."@en ;
  rdfs:comment "An identifiable quality of a FeatureOfInterest that can be observed or acted upon. A property can apply to different features of interest."@en ;
  skos:example "Cars (a feature type) all have a characteristic colour, where \"colour\" is a property."@en ;
  skos:note "Concepts from existing code lists, vocabularies, and taxonomies, may be used as instances of Property."@en ;
  rdfs:isDefinedBy sosa: .

ssn:Property a owl:Class ;
  owl:deprecated true ;
  owl:equivalentClass sosa:Property ;
  rdfs:isDefinedBy ssn: .

sosa:PropertyOfInterest a owl:Class ;
  rdfs:label "Property Of Interest"@en ;
  skos:definition "An identifiable quality of a FeatureOfInterest that can be observed or acted upon. A property of interest is specific to a feature of interest. It is inherent to and cannot exist without that FeatureOfInterest."@en ;
  rdfs:comment "An identifiable quality of a FeatureOfInterest that can be observed or acted upon. A property of interest is specific to a feature of interest. It is inherent to and cannot exist without that FeatureOfInterest."@en ;
  skos:example "Abby's car has the colour red, where \"colour red\" is a property of interest of the car."@en ;
  skos:note "Properties of interest need not always be explicitly identified. It depends on the use case."@en ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:isPropertyOf ; owl:allValuesFrom sosa:FeatureOfInterest ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:isPropertyOf ; owl:cardinality "1"^^xsd:nonNegativeInteger ]  ;
  rdfs:isDefinedBy sosa: .

  ssn:hasProperty a owl:ObjectProperty ; 
    owl:equivalentProperty sosa:hasProperty ;
    owl:deprecated true ;
    rdfs:label "has property"@en ;
    skos:definition "Relation between an entity and a Property of that entity."@en ;
    rdfs:comment "Relation between an entity and a Property of that entity."@en ;
    owl:inverseOf ssn:isPropertyOf ;
    rdfs:isDefinedBy ssn: .

  ssn:isPropertyOf a owl:ObjectProperty ;
    owl:equivalentProperty sosa:isPropertyOf ;
    owl:deprecated true ;
    rdfs:label "is property of"@en ;
    skos:definition "Relation between a Property and the entity it belongs to."@en ;
    rdfs:comment "Relation between a Property and the entity it belongs to."@en ;
    owl:inverseOf ssn:hasProperty ; 
    rdfs:isDefinedBy ssn: .

  sosa:ObservableProperty 
    rdfs:subClassOf ssn:Property ;
    rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isObservedBy ; owl:allValuesFrom sosa:Sensor ] ;
    rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf sosa:observedProperty ] ; owl:allValuesFrom sosa:Observation ] ;
    rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf sosa:isProxyFor ] ; owl:allValuesFrom sosa:Stimulus ] ;
    rdfs:isDefinedBy sosa: .

  sosa:ActuatableProperty
    rdfs:subClassOf ssn:Property ;
    rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isActedOnBy ; owl:allValuesFrom sosa:Actuation ] ;
    rdfs:isDefinedBy sosa: .

# sosa: namespace

sosa:Property 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isPropertyOf ; owl:allValuesFrom sosa:FeatureOfInterest ]  ;
  rdfs:isDefinedBy sosa: .

  sosa:hasProperty  
    rdfs:isDefinedBy sosa: .

  sosa:isPropertyOf 
    rdfs:isDefinedBy sosa: .


## Sample

sosa:Sample
  rdfs:subClassOf sosa:FeatureOfInterest ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isResultOf ; owl:allValuesFrom sosa:Sampling ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isResultOf ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isSampleOf ; owl:allValuesFrom sosa:FeatureOfInterest ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isSampleOf ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasOriginalSample ; owl:allValuesFrom sosa:Sample ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasSampledFeature ; owl:allValuesFrom sosa:FeatureOfInterest ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isResultOfMadeBySampler ; owl:allValuesFrom sosa:Sampler ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isResultOfUsedProcedure ; owl:allValuesFrom sosa:Procedure ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasPreparationStep ; owl:allValuesFrom sosa:PreparationStep ] ;
  rdfs:isDefinedBy sosa: .

  sosa:hasSample a owl:InverseFunctionalProperty ;
    rdfs:isDefinedBy sosa: .

  sosa:isSampleOf a owl:FunctionalProperty ;
    rdfs:isDefinedBy sosa: .

  sosa:hasOriginalSample 
    rdfs:isDefinedBy sosa: .

  sosa:hasSampledFeature 
    rdfs:isDefinedBy sosa: .

  sosa:isResultOfMadeBySampler a owl:ObjectProperty ;
    owl:propertyChainAxiom ( sosa:isResultOf sosa:madeBySampler ) ;
    rdfs:isDefinedBy sosa: .

  sosa:isResultOfUsedProcedure a owl:ObjectProperty ;
    owl:propertyChainAxiom ( sosa:isResultOf sosa:usedProcedure ) ;
    rdfs:isDefinedBy sosa: .

  sosa:hasPreparationStep a owl:FunctionalProperty ;
    rdfs:isDefinedBy sosa: .

sosa:SpatialSample
  rdfs:subClassOf sosa:Sample ;
  rdfs:isDefinedBy sosa: .
  
sosa:MaterialSample
  rdfs:subClassOf sosa:Sample ;
  rdfs:isDefinedBy sosa: .

sosa:StatisticalSample
  rdfs:subClassOf sosa:Sample ;
  rdfs:isDefinedBy sosa: .


## Platform

sosa:Platform 
  rdfs:subClassOf ssn:System ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hosts ; owl:allValuesFrom sosa:System ]  ;
  rdfs:isDefinedBy sosa: .

  sosa:hosts
    owl:propertyChainAxiom ( sosa:inDeployment sosa:deployedSystem ) ;
    rdfs:isDefinedBy sosa: .
 
  sosa:isHostedBy
    rdfs:isDefinedBy sosa: .


## Procedures

sosa:Procedure 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasInput ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasOutput ]  ;
  rdfs:isDefinedBy sosa: .

  ssn:hasInput a owl:ObjectProperty ;
    owl:equivalentProperty sosa:hasInput ;
    owl:deprecated true ;
    rdfs:label "has input"@en ;
    skos:definition "Relation between a Procedure and an Input to it."@en ;
    rdfs:comment "Relation between a Procedure and an Input to it."@en ;
    rdfs:isDefinedBy ssn: .

    ssn:Input a owl:Class ;
      owl:deprecated true ;
      rdfs:label "Input"@en ;
      skos:definition "Any information that is provided to a Procedure for its use."@en ;
      rdfs:comment "Any information that is provided to a Procedure for its use."@en ;
      rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:hasInput ] ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
      rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:hasInput ] ; owl:allValuesFrom sosa:Procedure ] ;
      rdfs:isDefinedBy ssn: .

  ssn:hasOutput a owl:ObjectProperty ;
    owl:equivalentProperty sosa:hasOutput ;
    owl:deprecated true ;
    rdfs:label "has output"@en ;
    skos:definition "Relation between a Procedure and an Output of it."@en ;
    rdfs:comment "Relation between a Procedure and an Output of it."@en ;
    rdfs:isDefinedBy ssn: .

    ssn:Output a owl:Class ;
      owl:deprecated true ;
      rdfs:label "Output"@en ;
      skos:definition "Any information that is reported from a Procedure."@en ;
      rdfs:comment "Any information that is reported from a Procedure."@en ;
      rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:hasOutput ] ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
      rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:hasOutput ] ; owl:allValuesFrom sosa:Procedure ] ;
      rdfs:isDefinedBy ssn: .

sosa:ObservingProcedure
  rdfs:subClassOf sosa:Procedure ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implementedBy ; owl:allValuesFrom sosa:Sensor ] ;
  rdfs:isDefinedBy sosa: .

sosa:ActuationProcedure
  rdfs:subClassOf sosa:Procedure ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implementedBy ; owl:allValuesFrom sosa:Actuator ] ;
  rdfs:isDefinedBy sosa: .

sosa:SamplingProcedure
  rdfs:subClassOf sosa:Procedure ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implementedBy ; owl:allValuesFrom sosa:Sampler ] ;
  rdfs:isDefinedBy sosa: .

sosa:PreparationProcedure
  rdfs:subClassOf sosa:Procedure ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implementedBy ; owl:allValuesFrom sosa:PreparationStep ] ;
  rdfs:isDefinedBy sosa: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

  sosa:hasInput 
    rdfs:isDefinedBy sosa: .

  sosa:hasOutput 
    rdfs:isDefinedBy sosa: .


## ProcedureExecutors

ssn:implements a owl:ObjectProperty ;
  owl:equivalentProperty sosa:implements ;
  owl:deprecated true ;
  rdfs:label "implements"@en ;
  skos:definition "Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method)."@en ;
  rdfs:comment "Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method)."@en ;
  skos:example "For example, the relationship between a sensor and the scientific measuring Procedure via which it senses."@en ;
  owl:inverseOf ssn:implementedBy ;
  rdfs:isDefinedBy ssn: .

ssn:implementedBy a owl:ObjectProperty ;
  owl:equivalentProperty sosa:implementedBy ;
  owl:deprecated true ;
  rdfs:label "implemented by"@en ;
  skos:definition "Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way."@en ;
  rdfs:comment "Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way."@en ;
  skos:example "For example, the relationship between a scientific measuring Procedure and a sensor that senses via that Procedure."@en ;
  owl:inverseOf ssn:implements ;
  rdfs:isDefinedBy ssn: .

sosa:Sensor
  rdfs:subClassOf sosa:System ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:detects ; owl:allValuesFrom sosa:Stimulus ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:allValuesFrom sosa:ObservingProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:observes ; owl:allValuesFrom sosa:ObservableProperty ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeObservation ; owl:allValuesFrom sosa:Observation ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isHostedBy ; owl:allValuesFrom sosa:Platform ]  ;
  rdfs:isDefinedBy sosa: .

  sosa:observes 
    rdfs:subPropertyOf ssn:forProperty ;
    rdfs:isDefinedBy sosa: .

  sosa:isObservedBy
    rdfs:isDefinedBy sosa: .

sosa:Actuator
  rdfs:subClassOf sosa:System ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:allValuesFrom sosa:ActuationProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:forProperty ; owl:allValuesFrom sosa:ActuatableProperty ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeActuation ; owl:allValuesFrom sosa:Actuation ] ;
  rdfs:isDefinedBy sosa: .

sosa:Sampler 
  rdfs:subClassOf sosa:System ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:allValuesFrom sosa:SamplingProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeSampling ; owl:allValuesFrom sosa:Sampling ] ;
  rdfs:isDefinedBy sosa: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

sosa:implements 
  rdfs:isDefinedBy sosa: .

sosa:implementedBy 
  rdfs:isDefinedBy sosa: .


## ProcedureExecutions

sosa:usedProcedure 
  owl:propertyChainAxiom ( sosa:madeBySensor sosa:implements ) ;
  owl:propertyChainAxiom ( sosa:madeByActuator sosa:implements ) ;
  owl:propertyChainAxiom ( sosa:madeBySampler sosa:implements ) ;
  rdfs:isDefinedBy sosa: .

sosa:hasFeatureOfInterest
  rdfs:isDefinedBy sosa: .

sosa:hasUltimateFeatureOfInterest
  rdfs:isDefinedBy sosa: .

sosa:isFeatureOfInterestOf
  rdfs:isDefinedBy sosa: .

sosa:ProcedureExecution a owl:Class ;
  owl:equivalentClass ssn:ProcedureExecution ;
  rdfs:label "Procedure Execution"@en ;
  skos:definition "Act of carrying out a Procedure. This class generalizes the Observation, Actuation, and Sampling classes."@en ;
  rdfs:isDefinedBy sosa: .

sosa:Observation a owl:Class ;
  rdfs:subClassOf sosa:ProcedureExecution ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeBySensor ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeBySensor ; owl:allValuesFrom sosa:Sensor ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeOnPlatform ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeOnPlatform ; owl:allValuesFrom sosa:Platform ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:usedProcedure ; owl:allValuesFrom sosa:ObservingProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:observedProperty ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:observedProperty ; owl:allValuesFrom sosa:ObservableProperty ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:wasOriginatedBy ; owl:cardinality "1"^^xsd:nonNegativeInteger] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:wasOriginatedBy ; owl:allValuesFrom ssn:Stimulus ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:phenomenonTime ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:resultTime ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:isDefinedBy sosa: .

  sosa:madeObservation
    rdfs:isDefinedBy sosa: .
    
  sosa:madeBySensor 
    rdfs:isDefinedBy sosa: .
    
  sosa:madeOnPlatform
    rdfs:isDefinedBy sosa: .
    
  sosa:observedProperty 
    rdfs:isDefinedBy sosa: .

sosa:Actuation a owl:Class ;
  rdfs:subClassOf sosa:ProcedureExecution ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeByActuator ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeByActuator ; owl:allValuesFrom sosa:Actuator ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:usedProcedure ; owl:allValuesFrom sosa:ActuationProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:actsOnProperty ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:actsOnProperty ; owl:allValuesFrom sosa:ActuatableProperty ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:resultTime ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:isDefinedBy sosa: .

  sosa:madeActuation
    rdfs:isDefinedBy sosa: .

  sosa:madeByActuator 
    rdfs:isDefinedBy sosa: .

  sosa:actsOnProperty
    rdfs:isDefinedBy sosa: .

  sosa:isActedOnBy
    rdfs:isDefinedBy sosa: .

sosa:Sampling a owl:Class ;
  rdfs:subClassOf sosa:ProcedureExecution ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeBySampler ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:madeBySampler ; owl:allValuesFrom sosa:Sampler ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:usedProcedure ; owl:allValuesFrom sosa:SamplingProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasUltimateFeatureOfInterest ; owl:allValuesFrom sosa:FeatureOfInterest ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasResult ; owl:allValuesFrom sosa:Sample ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:resultTime ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:isDefinedBy sosa: .

  sosa:madeSampling 
    rdfs:isDefinedBy sosa: .

  sosa:madeBySampler 
    rdfs:isDefinedBy sosa: .

sosa:PreparationStep a owl:Class ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:usedProcedure ; owl:allValuesFrom sosa:PreparationProcedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:preparedSample ; owl:cardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:preparedSample ; owl:allValuesFrom sosa:Sample ] ;
  rdfs:isDefinedBy sosa: .

  sosa:madeSampling 
    rdfs:isDefinedBy sosa: .

  sosa:madeBySampler 
    rdfs:isDefinedBy sosa: .

  sosa:preparedSample a owl:FunctionalProperty ;
    rdfs:isDefinedBy sosa: .


## Stimulus

ssn:Stimulus a owl:Class ;
  owl:equivalentClass sosa:Stimulus ;
  owl:deprecated true ;
  rdfs:label "Stimulus"@en ;
  skos:definition "An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor."@en ;
  rdfs:comment "An event in the real world that 'triggers' the Sensor. The properties associated to the Stimulus may be different to the eventual observed ObservableProperty. It is the event, not the object, that triggers the Sensor."@en ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:wasOriginatedBy ] ; owl:allValuesFrom sosa:Observation ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:detects ] ; owl:allValuesFrom sosa:Sensor ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:isProxyFor ; owl:allValuesFrom sosa:ObservableProperty ] ;
  rdfs:isDefinedBy ssn: .

  ssn:wasOriginatedBy a owl:ObjectProperty , owl:FunctionalProperty ;
    owl:equivalentProperty sosa:wasOriginatedBy ;
    owl:deprecated true ;
    rdfs:label "was originated by"@en ;
    skos:definition "Relation between an Observation and the Stimulus that originated it."@en ;
    rdfs:comment "Relation between an Observation and the Stimulus that originated it."@en ;
    rdfs:isDefinedBy ssn: .

  ssn:detects a owl:ObjectProperty ;
    owl:equivalentProperty sosa:detects ;
    owl:deprecated true ;
    rdfs:label "detects"@en ;
    skos:definition "A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty."@en ;
    rdfs:comment "A relation from a Sensor to the Stimulus that the Sensor detects. The Stimulus itself will be serving as a proxy for some ObservableProperty."@en ;
    rdfs:isDefinedBy ssn: .

  ssn:isProxyFor a owl:ObjectProperty ;
    owl:equivalentProperty sosa:isProxyFor ;
    owl:deprecated true ;
    rdfs:label "is proxy for"@en ;
    skos:definition "A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for."@en ;
    rdfs:comment "A relation from a Stimulus to the Property that the Stimulus is serving as a proxy for."@en ;
    skos:example "For example, the expansion of quicksilver is a stimulus that serves as a proxy for some temperature property. An increase or decrease in the velocity of spinning cups on a wind sensor is serving as a proxy for the wind speed."@en ;
    rdfs:isDefinedBy ssn: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

sosa:Stimulus 
  owl:equivalentClass ssn:Stimulus ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf sosa:wasOriginatedBy ] ; owl:allValuesFrom sosa:Observation ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf sosa:detects ] ; owl:allValuesFrom sosa:Sensor ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isProxyFor ; owl:allValuesFrom sosa:ObservableProperty ] ;
  rdfs:isDefinedBy sosa: .

  sosa:wasOriginatedBy a owl:FunctionalProperty ;
    rdfs:isDefinedBy sosa: .

  sosa:detects 
    rdfs:isDefinedBy sosa: .

  sosa:isProxyFor 
    rdfs:isDefinedBy sosa: .

  
## Result

sosa:Result
  owl:deprecated true ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isResultOf ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] ;
  rdfs:isDefinedBy sosa: .

  sosa:hasResult 
    rdfs:isDefinedBy sosa: .

  sosa:isResultOf a owl:InverseFunctionalProperty ;
    rdfs:isDefinedBy sosa: .

  sosa:hasSimpleResult 
    rdfs:isDefinedBy sosa: .

  sosa:resultTime
    rdfs:isDefinedBy sosa: .

  sosa:phenomenonTime
    rdfs:isDefinedBy sosa: .

#  sosa:hasResultingSample a owl:ObjectProperty ;
#    rdfs:subPropertyOf sosa:hasResult ;
#    rdfs:isDefinedBy sosa: .

#  sosa:isSamplingResultOf a owl:ObjectProperty ;
#    rdfs:subPropertyOf sosa:isResultOf ;
#    rdfs:isDefinedBy sosa: .


## Systems

ssn:System a owl:Class ;
  owl:equivalentClass sosa:System ;
  owl:deprecated true ;
  rdfs:label "System"@en ;
  skos:definition "System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems."@en ; 
  rdfs:comment "System is a unit of abstraction for pieces of infrastructure that implement Procedures. A System may have components, its subsystems, which are other systems."@en ; 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isHostedBy ; owl:allValuesFrom sosa:Platform ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:implements ; owl:allValuesFrom sosa:Procedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:hasSubSystem ; owl:allValuesFrom ssn:System ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf ssn:hasSubSystem ] ; owl:allValuesFrom ssn:System ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:hasDeployment ; owl:allValuesFrom ssn:Deployment ]  ;
  rdfs:isDefinedBy ssn: .

  ssn:hasSubSystem a owl:ObjectProperty ;
    owl:equivalentProperty sosa:hasSubSystem ;
    owl:deprecated true ;
    rdfs:label "has subsystem"@en ;
    skos:definition "Relation between a System and its component parts."@en ;
    rdfs:comment "Relation between a System and its component parts."@en ;
    rdfs:isDefinedBy ssn: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

sosa:System 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:isHostedBy ; owl:allValuesFrom sosa:Platform ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:implements ; owl:allValuesFrom sosa:Procedure ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasSubSystem ; owl:allValuesFrom sosa:System ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty [ owl:inverseOf sosa:hasSubSystem ] ; owl:allValuesFrom sosa:System ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:hasDeployment ; owl:allValuesFrom sosa:Deployment ]  ;
  rdfs:isDefinedBy sosa: .

  sosa:hasSubSystem 
    rdfs:isDefinedBy sosa: .


## Deployment

ssn:Deployment a owl:Class ;
  owl:equivalentClass sosa:Deployment ;
  owl:deprecated true ;
  rdfs:label "Deployment"@en ;
  skos:definition "Describes the Deployment of one or more assets for a particular purpose. Deployment may be done on a Platform."@en ;
  rdfs:comment "Describes the Deployment of one or more assets for a particular purpose. Deployment may be done on a Platform."@en ;
  skos:example "For example, a temperature Sensor deployed on a wall, or a whole network of Sensors deployed for an Observation campaign."@en ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:deployedSystem ; owl:allValuesFrom ssn:System ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:deployedAsset ; owl:allValuesFrom [ a owl:Class ; owl:unionOf ( sosa:Sensor sosa:Platform ssn:System ) ] ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:deployedOnPlatform ; owl:allValuesFrom sosa:Platform ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty ssn:forProperty ; owl:allValuesFrom ssn:Property ]  ;
  rdfs:isDefinedBy ssn: .

  ssn:deployedAsset a owl:ObjectProperty ;
    owl:equivalentProperty sosa:deployedAsset ;
    owl:deprecated true ;
    rdfs:label "deployed asset"@en ;
    skos:definition "Relation between a Deployment and a deployed asset."@en ;
    rdfs:comment "Relation between a Deployment and a deployed asset."@en ;
    rdfs:isDefinedBy ssn: .

  ssn:deployedOnPlatform a owl:ObjectProperty ;
    owl:equivalentProperty sosa:deployedOnPlatform ;
    owl:deprecated true ;
    rdfs:label "deployed on platform"@en ;
    skos:definition "Relation between a Deployment and the Platform on which the Systems are deployed."@en ;
    rdfs:comment "Relation between a Deployment and the Platform on which the Systems are deployed."@en ;
    owl:inverseOf ssn:inDeployment ;
    rdfs:isDefinedBy ssn: .

  ssn:deployedSystem a owl:ObjectProperty ;
    owl:equivalentProperty sosa:deployedSystem ;
    owl:deprecated true ;
    rdfs:subPropertyOf ssn:deployedAsset ;
    rdfs:label "deployed system"@en ;
    skos:definition "Relation between a Deployment and a deployed System."@en ;
    rdfs:comment "Relation between a Deployment and a deployed System."@en ;
    owl:inverseOf ssn:hasDeployment ;
    rdfs:isDefinedBy ssn: .

  ssn:hasDeployment a owl:ObjectProperty ;
    owl:equivalentProperty sosa:hasDeployment ;
    owl:deprecated true ;
    rdfs:label "has deployment"@en ;
    skos:definition "Relation between a System and a Deployment, recording that the System is deployed in that Deployment."@en ;
    rdfs:comment "Relation between a System and a Deployment, recording that the System is deployed in that Deployment."@en ;
    owl:inverseOf ssn:deployedSystem ;
    rdfs:isDefinedBy ssn: .

  ssn:inDeployment a owl:ObjectProperty ;
    owl:equivalentProperty sosa:inDeployment ;
    owl:deprecated true ;
    rdfs:label "in deployment"@en ;
    skos:definition "Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform."@en ;
    rdfs:comment "Relation between a Platform and a Deployment, meaning that the deployedSystems of the Deployment are hosted on the Platform."@en ;
    skos:example "For example, a relation between a buoy and a deployment of several Sensors."@en ;
    owl:inverseOf ssn:deployedOnPlatform ;
    rdfs:isDefinedBy ssn: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

sosa:Deployment 
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:deployedSystem ; owl:allValuesFrom sosa:System ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:deployedAsset ; owl:allValuesFrom [ a owl:Class ; owl:unionOf ( sosa:Sensor sosa:Platform sosa:System ) ] ] ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:deployedOnPlatform ; owl:allValuesFrom sosa:Platform ]  ;
  rdfs:subClassOf [ a owl:Restriction ; owl:onProperty sosa:forProperty ; owl:allValuesFrom sosa:Property ]  ;
  rdfs:isDefinedBy sosa: .

  sosa:deployedAsset 
    rdfs:isDefinedBy sosa: .

  sosa:deployedOnPlatform 
    rdfs:isDefinedBy sosa: .

  sosa:deployedSystem 
    rdfs:isDefinedBy sosa: .

  sosa:hasDeployment 
    rdfs:isDefinedBy sosa: .

  sosa:inDeployment 
    rdfs:isDefinedBy sosa: .


## forProperty

ssn:forProperty a owl:ObjectProperty ;
  owl:equivalentProperty sosa:forProperty ;
  owl:deprecated true ;
  rdfs:label "for property"@en ;
  skos:definition "A relation between some aspect of an entity and a Property."@en ;
  rdfs:comment "A relation between some aspect of an entity and a Property."@en ;
  skos:example "For example, from a Sensor to the properties it can observe; from an Actuator to the properties it can act on; from a Deployment to the properties it was installed to observe or act on; from a SystemCapability to the Property the capability is described for."@en ;
  rdfs:isDefinedBy ssn: .

# clone the ssn: resources into the sosa: namespace
# Note owl:equivalentClass/Property axioms 

sosa:forProperty a owl:ObjectProperty ;
  rdfs:isDefinedBy sosa: .


## Collections 

sosa:SampleCollection
  a owl:Class ;
  rdfs:subClassOf rdf:Bag ;
  rdfs:subClassOf [ 
    a owl:Restriction ; 
    owl:onProperty sosa:hasMember ; 
    owl:allValuesFrom [ 
      owl:unionOf ( 
        sosa:Sample 
        sosa:SampleCollection 
      ) ; 
    ] 
  ] ;
  owl:disjointWith sosa:ObservationCollection ;
  rdfs:isDefinedBy sosa: .

sosa:ObservationCollection 
  a owl:Class ;
  rdfs:subClassOf rdf:Bag ;
  rdfs:subClassOf [ 
    a owl:Restriction ; 
    owl:onProperty sosa:hasMember ; 
    owl:allValuesFrom [ 
      owl:unionOf ( 
        sosa:Observation 
        sosa:ObservationCollection 
      ) ;
    ] 
  ] ;
  owl:disjointWith sosa:SampleCollection ;
  rdfs:isDefinedBy sosa: .

